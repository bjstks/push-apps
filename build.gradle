buildscript {
    ext {
        kotlinVersion = '1.2.0'
        junitPlatformVersion = '1.0.1'
        springBootVersion = '1.5.9.RELEASE'
    }

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply from: "$rootProject.rootDir/gradle/version.gradle"

allprojects {
    apply plugin: 'java'
    apply from: "$rootProject.rootDir/gradle/version.gradle"
    apply from: "$rootProject.rootDir/gradle/idea.gradle"

    repositories {
        jcenter()
        mavenCentral()
    }

    group = 'org.cloudfoundry.tools'
    version = pushAppsVersion
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}

task version {
    println "$pushAppsVersion"
}

task bumpPatch(type: UpdatePatchVersionTask) {
    versionFilePath = "$rootProject.rootDir/gradle/version.gradle"
}

class UpdatePatchVersionTask extends DefaultTask {
    @Input
    String versionFilePath

    @TaskAction
    def updatePatchVersion() {
        def versionFile = new File(versionFilePath)
        def currentVersion = versionFile.text
        def versionStringParts = currentVersion.split("\\.")
        def patchInt = Integer.parseInt(versionStringParts.last().replace("'\n", ""))
        versionStringParts[versionStringParts.size() - 1] = (patchInt + 1).toString() + "'\n"

        versionFile.text = versionStringParts.join(".")
    }
}
