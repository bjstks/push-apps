---
resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: push-apps
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/push-apps.git
    branch: master
    private_key: ((push-apps-git-key))
    submodules: all
- name: slack-alert
  type: slack-notification
  source:
    url: ((webhook-url))

jobs:
- name: test-push-apps
  build_logs_to_retain: 25
  serial: true
  on_failure:
    put: slack-alert
    params:
      text: |
        The Push-Apps build failed
        https://pcf-metrics.ci.cf-app.com/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  plan:
  - get: push-apps
    trigger: true
  - aggregate:
    - task: test
      timeout: 10m
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: pcfmetrics/push-apps-ci
            tag: latest
        inputs:
        - name: push-apps
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -ex

              echo "Running tests!"
              pushd push-apps
                ./gradlew clean build
              popd
    - task: acceptance-test
      attempts: 3
      timeout: 15m
      params:
        DOCKER_HOST: "10.0.16.11:4243"
        INTEGRATION_HOST: "10.0.16.11"
        LOG_LEVEL: "debug"
        CF_LOG_LEVEL: "error"
        CF_API: ((cf-api))
        CF_USERNAME: ((cf-username))
        CF_PASSWORD: ((cf-password))
        CF_DOMAIN: ((cf-domain))
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: pcfmetrics/push-apps-ci
            tag: latest
        inputs:
        - name: push-apps
        run:
          path: bash
          args:
            - -c
            - |
              #!/bin/bash
              set -ex

              echo "Running Acceptance Tests!"

              pushd push-apps
                ./gradlew acceptanceTest
              popd

- name: publish-push-apps
  build_logs_to_retain: 25
  serial: true
  on_failure:
    put: slack-alert
    params:
      text: |
        Push-Apps failed to publish
        https://concourse.superpipe.gcp.pcf-metrics.com/teams/main/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  plan:
  - aggregate:
    - get: push-apps
      trigger: true
      passed: [ test-push-apps ]
  - task: publish
    params:
      BINTRAY_USER: ((bintray-user))
      BINTRAY_API_KEY: ((bintray-api-key))
      BINTRAY_GPG_PASSPHRASE: ((bintray-gpg-passphrase))
      MAVEN_CENTRAL_TOKEN_USER: ((maven-central-token-user))
      MAVEN_CENTRAL_TOKEN_PASSWORD: ((maven-central-token-password))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          tag: latest
          repository: pcfmetrics/push-apps-ci
      inputs:
      - name: push-apps
      outputs:
      - name: push-apps-bumped
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex

            pushd push-apps
              ./gradlew bumpPatch

              git add -A
              git commit -m "bump version"

              ./gradlew assemble bintrayUpload
              ./gradlew publishUploadedBintrayArtifacts
              ./gradlew signBintrayArtifacts
              ./gradlew syncArtifactsToMavenCentral
            popd

            rsync -a push-apps/ push-apps-bumped
  - put: push-apps
    params:
      repository: push-apps-bumped
      rebase: true

- name: build-docker-images
  build_logs_to_retain: 25
  serial: true
  plan:
  - aggregate:
    - get: push-apps
      trigger: false
  - task: build-docker
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: pcfmetrics/push-apps-ci
          tag: latest
      inputs:
      - name: push-apps
      params:
        DOCKER_USERNAME: ((docker-username))
        DOCKER_PASSWORD: ((docker-password))
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -ex

            pushd push-apps/ci
              docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
              docker build -t pcfmetrics/push-apps-ci .
              docker push pcfmetrics/push-apps-ci
            popd
    params:
      DOCKER_API_VERSION: 1.23
      DOCKER_HOST: "10.0.16.11:4243"
      DOCKER_USERNAME: "((docker-username))"
      DOCKER_PASSWORD: "((docker-password))"
